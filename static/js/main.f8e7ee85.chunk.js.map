{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","index","key","SearchBox","props","placeholder","type","onChange","searchfield","Scroll","style","overflow","border","height","children","ErrorBoundary","state","hasError","e","info","this","setState","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","console","log","filteredRobots","filter","robot","toUpperCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACnB,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAI,WAAWC,IAAG,+BAA0BL,EAA1B,cACvB,6BACI,4BAAKC,GACL,2BAAIC,MCYLI,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,6BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OAAO,kBAAC,EAAD,CACMC,IAAKD,EACLV,GAAIO,EAAOG,GAAOV,GAClBC,KAAMM,EAAOG,GAAOT,KACpBC,MAAOK,EAAOG,GAAOR,aCNvCU,EAJG,SAACC,GACf,OAAO,2BAAOC,YAAY,gBAAgBC,KAAK,SAASC,SAAUH,EAAMI,YAAad,UAAU,sCCOpFe,EARA,SAACL,GACZ,OACI,yBAAKM,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAClET,EAAMU,WCmBFC,E,kDArBX,WAAaX,GAAQ,IAAD,8BAChB,cAAMA,IACDY,MAAQ,CACTC,UAAS,GAHG,E,qDAOpB,SAAkBC,EAAEC,GAChBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,8DAGAG,KAAKhB,MAAMU,a,GAjBFQ,IAAMC,WCgDnBC,G,wDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAACb,YAAYkB,EAAMC,OAAOC,SAbxC,EAAKZ,MAAO,CACRlB,OAAO,GACPU,YAAY,IAJN,E,qDAQd,WAAoB,IAAD,OACfqB,MAAM,4CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKZ,SAAS,CAACvB,OAAOmC,S,oBAOvC,WAAW,IAAD,OACNC,QAAQC,IAAI,UACZ,IAAMC,EAAehB,KAAKJ,MAAMlB,OAAOuC,QAAO,SAACC,GAC3C,OAAOA,EAAM9C,KAAK+C,cAAcC,SAAS,EAAKxB,MAAMR,YAAY+B,kBAEpE,OAA+B,IAA3BnB,KAAKJ,MAAMlB,OAAO2C,OACX,2CAIC,yBAAK/C,UAAU,MACX,wBAAIA,UAAU,MAAd,gBACA,kBAAC,EAAD,CAAWc,YAAaY,KAAKK,iBAC7B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAU3B,OAAQsC,W,GAlChCb,cCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f8e7ee85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id,name,email}) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 bw2 shadow-5 grow\">\r\n            <img alt='robo img' src={`https://robohash.org/${id}?200x200`}></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user,index)=>{\r\n                    return <Card \r\n                                 key={index} \r\n                                 id={robots[index].id} \r\n                                 name={robots[index].name} \r\n                                 email={robots[index].email}\r\n                            />;\r\n            })      \r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardList;\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n    return <input placeholder='Search Robots' type='search' onChange={props.searchfield} className='pa3 ba b--green bg-lightest-blue'/>;\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n          {props.children}\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = { \r\n            hasError:false\r\n        }\r\n    };\r\n\r\n    componentDidCatch(e,info) {\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>OOoops!, something went wrong.</h1>\r\n        }\r\n        else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundary from '../components/ErrorBoundary.js';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor (){\r\n        super();\r\n        this.state ={\r\n            robots:[],\r\n            searchfield:''\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.cypress.io/users')\r\n        .then(response => response.json())\r\n        .then(users=>this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value});\r\n    }\r\n\r\n    render () {\r\n        console.log('render');\r\n        const filteredRobots=this.state.robots.filter((robot) => {\r\n            return robot.name.toUpperCase().includes(this.state.searchfield.toUpperCase());\r\n        });\r\n        if (this.state.robots.length===0){\r\n            return <h1>Loading....</h1>\r\n        }\r\n        else {\r\n            return (\r\n                    <div className='tc'>\r\n                        <h1 className='f1'>Robo Friends</h1>\r\n                        <SearchBox searchfield={this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <ErrorBoundary>\r\n                                <CardList robots={filteredRobots}/>\r\n                            </ErrorBoundary>\r\n                        </Scroll>\r\n                    </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}